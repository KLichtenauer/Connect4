

>java connect4.Shell LPGSZMHAEOQKVXRFYBUTNICJDW Z V SLVGBTFXJQOHEWIRZYAMKPCNDU
 Z Q
CJGDPSHKTURAWZXFMYNQOBVII Z Z
Error! Input must be in the format: <permI tickI keyI>! Where permI has
exactly 26 and tickI, keyI 1 characters.

>java connect4.Shell LPGSZMHAEOQKVXRFYBUTNICJDW Z V SLVGBTFXJQOHEWIRZYAMKPCNDU
 Z Q
CJGDPSHKTURAWZXFMYNQOBVIIK Z Z
Error! Please make sure every letter gets assigned!


CJGDPSHKTURAWZXFMYNQOBVLIe Z Z
Error! Input is not matching the set guidelines. Upper case letters form A - Z
only!

>java connect4.Shell LPGSZMHAEOQKVXRFYBUTNICJDW Z V SLVGBTFXJQOHEWIRZYAMKPCNDU
Z Q
CJGDPSHKTURAWZXFMYNQOBVLI* Z Z
Error! Input is not matching the set guidelines. Upper case letters form A - Z
only!

>java connect4.Shell
A
M
ICHLIEBEPROGRAMMIEREN
PVNGPTJTIXQLXMAAPTXTH

>java connect4.Shell LPGSZMHAEOQKVXRFYBUTNICJDW Z V SLVGBTFXJQOHEWIRZYAMKPCNDU
Z Q
CJGDPSHKTURAWZXFMYNQOBVLIE Z I
HALLOPRAKTOMAT
PFXWAKVSTNRRKX
GUTENMORGEN
ZOLKFRRHCKW

>java connect4.Shell LPGSZMHAEOQKVXRFYBUTNICJDW Z V SLVGBTFXJQOHEWIRZYAMKPCNDU
Z Q
CJGDPSHKTURAWZXFMYNQOBVLIE Z I
PFXWAKVSTNRRKX
HALLOPRAKTOMAT
ZOLKFRRHCKW
GUTENMORGEN

public static void main(String[] args) {

        Game game = new Game(true);
        game.gameBoard[0][0] = Player.HUMAN;
        game.gameBoard[0][1] = Player.BOT;
        game.gameBoard[0][2] = Player.HUMAN;
        game.gameBoard[0][3] = Player.BOT;
        game.gameBoard[0][4] = Player.HUMAN;
        game.gameBoard[0][5] = Player.HUMAN;
        game.gameBoard[0][6] = Player.HUMAN;
        //game.gameBoard[3][0] = Player.HUMAN;
        //game.gameBoard[4][0] = Player.HUMAN;
        //game.gameBoard[5][0] = Player.HUMAN;

        Coordinates2D c1 = new Coordinates2D(5,0);
        Coordinates2D c2 = new Coordinates2D(3, 1);
        Coordinates2D c3 = new Coordinates2D(2, 1);
        Coordinates2D c4 = new Coordinates2D(1, 1);

        String init = "";
        String[] k = init.split(" ");

        int i = game.getP();

        //game.gameBoard[5][2] = Player.BOT;
        //game.gameBoard[3][3] = Player.BOT;
        //game.gameBoard[2][3] = Player.BOT;
        //game.gameBoard[4][3] = Player.BOT;
        ////game.gameBoard[1][4] = Player.BOT;
        //game.gameBoard[2][4] = Player.BOT;
        //game.gameBoard[3][4] = Player.BOT;

        //game.setLevel(4);
        game.currentPlayer = Player.BOT;
        Board board = game.machineMove();
        int[][] arr1 = game.getDiagonalGroups(true);
        int[][] arr2 = game.getDiagonalGroups(false);
        //int[][] arr3 = game.getAscendingGroups();
        //int[][] arr4 = game.getDescendingGroups();
        int[][] arr5 = game.getStraightGroups(true);
        int[][] arr6 = game.getStraightGroups(false);
        //int[][] arr7 = game.getHorizontalGroups();
        //int[][] arr8 = game.getVerticalGroups();
        //boolean i = Arrays.deepEquals(arr1, arr3);
        //boolean i2 = Arrays.deepEquals(arr2, arr4);
        //boolean i3 = Arrays.deepEquals(arr5, arr7);
        //boolean i4 = Arrays.deepEquals(arr6, arr8);

        TreeSet set = new TreeSet();
        set.add(4);
        set.add(1);
        System.out.println(set);
    }

    connect4> l 2
    connect4> m 4
    97
    . . . . . . .
    . . . . . . .
    . . . . . . .
    . . . . . . .
    . . . O . . .
    . . . X . . .

    connect4> m 1
    105
    . . . . . . .
    . . . . . . .
    . . . . . . .
    . . . O . . .
    . . . O . . .
    X . . X . . .

    connect4> m 2
    106
    . . . . . . .
    . . . . . . .
    . . . . . . .
    . . . O . . .
    . . . O . . .
    X X O X . . .

    connect4> m 1
    114
    . . . . . . .
    . . . . . . .
    . . . O . . .
    . . . O . . .
    X . . O . . .
    X X O X . . .

    connect4> m 4

        public static void main(String[] args) {

            Game game = new Game(true, 4);
            game.setLevel(2);
            game.gameBoard[5][3] = Player.BOT;
            //game.gameBoard[3][0] = Player.HUMAN;
            //game.gameBoard[4][0] = Player.HUMAN;
            //game.gameBoard[5][0] = Player.HUMAN;

            Coordinates2D c1 = new Coordinates2D(5,0);
            Coordinates2D c2 = new Coordinates2D(3, 1);
            Coordinates2D c3 = new Coordinates2D(2, 1);
            Coordinates2D c4 = new Coordinates2D(1, 1);

            String init = "";
            String[] k = init.split(" ");


            game.gameBoard[2][2] = Player.HUMAN;
            game.gameBoard[2][3] = Player.HUMAN;
            //game.gameBoard[2][5] = Player.BOT;
            game.gameBoard[3][2] = Player.BOT;
            game.gameBoard[3][3] = Player.BOT;
            game.gameBoard[3][4] = Player.BOT;
            game.gameBoard[3][5] = Player.HUMAN;
            game.gameBoard[4][1] = Player.BOT;
            game.gameBoard[4][2] = Player.BOT;
            game.gameBoard[4][3] = Player.BOT;
            game.gameBoard[4][4] = Player.HUMAN;
            game.gameBoard[4][5] = Player.HUMAN;
            game.gameBoard[4][6] = Player.HUMAN;
            game.gameBoard[5][6] = Player.HUMAN;
            game.gameBoard[5][5] = Player.HUMAN;
            game.gameBoard[5][4] = Player.BOT;
            game.gameBoard[5][3] = Player.BOT;
            game.gameBoard[5][2] = Player.BOT;
            game.gameBoard[5][1] = Player.HUMAN;
            game.currentPlayer = Player.BOT;



            int i = game.getP();
            int j = game.getQ();
            int e = game.getR(true);



            //game.gameBoard[3][3] = Player.BOT;
            //game.gameBoard[2][3] = Player.BOT;
            //game.gameBoard[4][3] = Player.BOT;
            ////game.gameBoard[1][4] = Player.BOT;
            //game.gameBoard[2][4] = Player.BOT;
            //game.gameBoard[3][4] = Player.BOT;

            //game.setLevel(4);
            int[][] arr1 = game.getDiagonalGroups(true);
            int[][] arr2 = game.getDiagonalGroups(false);
            //int[][] arr3 = game.getAscendingGroups();
            //int[][] arr4 = game.getDescendingGroups();
            int[][] arr5 = game.getStraightGroups(true);
            int[][] arr6 = game.getStraightGroups(false);
            //int[][] arr7 = game.getHorizontalGroups();
            //int[][] arr8 = game.getVerticalGroups();
            int points = game.evaluateGame(true);

            game.machineMove();
        }