public static void main(String[] args) {
        Game game = new Game(true);
        //Game clone = (Game) game.clone();
        game.move(7);
        game.move(6);
        game.move(2);


        game.universalMove(3,Player.BOT) ;
        game.universalMove(4,Player.BOT) ;
        game.universalMove(4,Player.BOT) ;
        game.universalMove(4,Player.BOT) ;
        game.universalMove(4,Player.BOT) ;
        //Game clone2 = (Game) game.clone();
        //boolean k = clone2.currentPlayer == clone.currentPlayer;
        //boolean p = game.gameBoard == clone.gameBoard;
        //game.universalMove(4,Player.BOT) ;
        //game.universalMove(4,Player.BOT) ;
        //game.universalMove(7,Player.BOT) ;
        //game.universalMove(1,Player.BOT) ;
        //
        //int[][] arr = game.getHorizontalGroups();
        //int[][] arr2 = game.getVerticalGroups();
        //int[][] arr3 = game.getDescendingGroups();
        //int[][] arr4 = game.getAscendingGroups();
        //int q = game.getQ();
        //int p = game.getP();
        //int r = game.getR();
        System.out.println(game.evaluateMove());
        ////game.getAscendingGroups();
        ////game.getDescendingGroups();
        //int z;
    }


    private int[][] getDescendingGroups() {
        int[][] groups = new int[2][4];
        for (int i = 0; i < diagonals; i++) {
            int counter = 1;
            Player currentPlayer = Player.NOBODY;
            int col = Integer.max(COLS - 1 - i, 0);
            int row = Integer.max(i - COLS + 1, 0);
            boolean nextFieldExists = true;
            while (nextFieldExists) {
                Player currentField = getSlot(row, col);
                if (currentPlayer != currentField || col == COLS - 1
                        || row == ROWS - 1) {
                    if (col == COLS - 1 || row == ROWS - 1) {
                        nextFieldExists = false;
                        if(currentPlayer == currentField) {
                            if(counter < 4) {
                                counter++;
                            }
                        }
                    }
                    if (currentPlayer == Player.BOT) {
                        groups[1][counter - 1]++;
                    } else if (currentPlayer == Player.HUMAN) {
                        groups[0][counter - 1]++;
                    }
                    currentPlayer = currentField;
                    counter = 1;
                }
                else {
                    if(counter < 4) {
                        counter++;
                    }
                }
                col++;
                row++;
            }
        }
        return groups;
    }

        private int[][] getAscendingGroups() {
            int[][] groups = new int[2][4];
            int diagonals = COLS + Board.ROWS - 1;
            for (int i = 0; i < diagonals; i++) {
                int counter = 1;
                Player currentPlayer = Player.NOBODY;
                int col = Integer.max(i - ROWS + 1, 0);
                int row = Integer.max(i - col, 0);
                boolean nextFieldExists = true;
                while (nextFieldExists) {
                    Player currentField = getSlot(row, col);
                    if (currentPlayer != currentField || col == COLS - 1
                            || row == 0) {
                        if (col == COLS - 1 || row == 0) {
                            nextFieldExists = false;
                            if(currentPlayer == getSlot(row, col)) {
                                if(counter < 4) {
                                    counter++;
                                }
                            }
                        }
                        if (currentPlayer == Player.BOT) {
                            groups[1][counter - 1]++;
                        } else if (currentPlayer == Player.HUMAN) {
                            groups[0][counter - 1]++;
                        }
                        currentPlayer = currentField;
                        counter = 1;
                    }
                    else {
                        if(counter < 4) {
                            counter++;
                        }
                    }
                    col++;
                    row--;
                }
            }
            return groups;
        }

            private int[][] getHorizontalGroups() {
                int[][] groups = new int[2][4];
                int counter = 1;
                for (int row = 0; row < ROWS ; row++) {
                    Player currentPlayer = Player.NOBODY;
                    for (int col = 0; col < COLS; col++) {
                        Player currentField = getSlot(row, col);
                        if (currentField != currentPlayer
                                || col == COLS - 1) {
                            if (col == COLS - 1) {
                                if(currentPlayer == currentField) {
                                    if(counter < 4) {
                                        counter++;
                                    }
                                }
                            }
                            if (currentPlayer == Player.BOT) {
                                groups[1][counter - 1]++;
                            } else if (currentPlayer == Player.HUMAN) {
                                groups[0][counter - 1]++;
                            }
                            currentPlayer = currentField;
                            counter = 1;
                        } else {
                            if(counter < 4) {
                                counter++;
                            }
                        }
                    }
                }
                return groups;
            }

            private int[][] getVerticalGroups() {
                int[][] groups = new int[2][4];
                int counter = 1;
                for (int col = 0; col < COLS ; col++) {
                    Player currentPlayer = Player.NOBODY;
                    for (int row = 0; row < ROWS; row++) {
                        Player currentField = getSlot(row, col);
                        if (currentField != currentPlayer
                                || row == ROWS - 1) {
                            if (row == ROWS - 1) {
                                if(currentPlayer == currentField) {
                                    if(counter < 4) {
                                        counter++;
                                    }
                                }
                            }
                            if (currentPlayer == Player.BOT) {
                                groups[1][counter - 1]++;
                            } else if (currentPlayer == Player.HUMAN) {
                                groups[0][counter - 1]++;
                            }
                            currentPlayer = currentField;
                            counter = 1;
                        } else {
                            if(counter < 4) {
                                counter++;
                            }
                        }
                    }
                }
                return groups;
            }


                if (currentField != typeOfCurrentGroup
                        || indexOfLineElement == COLS - i - 1) {
                    if (indexOfLineElement == COLS - i - 1) {
                        if(typeOfCurrentGroup == currentField) {
                            if(counter < 4) {
                                counter++;
                            }
                        }
                    }
                    if (typeOfCurrentGroup == Player.BOT) {
                        groups[1][counter - 1]++;
                    } else if (typeOfCurrentGroup == Player.HUMAN) {
                        groups[0][counter - 1]++;
                    }
                    typeOfCurrentGroup = currentField;
                    counter = 1;
                } else {
                    if(counter < 4) {
                        counter++;
                    }
                }


                if (groupChanged || isEndOfArr) {
                   if (isEndOfArr && !groupChanged) {
                      if(counter < 4) {
                          counter++;
                      }
                   }
                   if (typeOfCurrentGroup == Player.BOT) {
                       groups[1][counter - 1]++;
                   } else if (typeOfCurrentGroup == Player.HUMAN) {
                       groups[0][counter - 1]++;
                   }
                   typeOfCurrentGroup = currentField;
                   counter = 1;
                } else {
                    if(counter < 4) {
                        counter++;
                    }
                }



                Game game = new Game(true);
                        game.gameBoard[5][6] = Player.HUMAN;
                        game.gameBoard[4][6] = Player.HUMAN;
                        game.gameBoard[4][5] = Player.HUMAN;
                        game.gameBoard[5][5] = Player.HUMAN;
                        game.gameBoard[3][5] = Player.HUMAN;
                        game.gameBoard[4][4] = Player.HUMAN;
                        game.gameBoard[5][1] = Player.HUMAN;
                        game.gameBoard[2][2] = Player.HUMAN;
                        game.gameBoard[2][3] = Player.HUMAN;
                        game.gameBoard[5][0] = Player.HUMAN;

                        //game.gameBoard[3][4] = Player.HUMAN;

                        game.gameBoard[5][4] = Player.BOT;
                        game.gameBoard[3][4] = Player.BOT;
                        game.gameBoard[3][3] = Player.BOT;
                        game.gameBoard[5][3] = Player.BOT;
                        game.gameBoard[4][3] = Player.BOT;
                        game.gameBoard[3][2] = Player.BOT;
                        game.gameBoard[5][2] = Player.BOT;
                        game.gameBoard[4][2] = Player.BOT;
                        game.gameBoard[1][2] = Player.BOT;
                        game.gameBoard[4][4] = Player.BOT;
                        game.gameBoard[0][0] = Player.BOT;
                        game.gameBoard[0][1] = Player.BOT;
                        game.gameBoard[0][6] = Player.BOT;
                        game.gameBoard[0][5] = Player.BOT;
                        game.gameBoard[0][2] = Player.HUMAN;
                        game.gameBoard[0][3] = Player.HUMAN;
                        game.gameBoard[0][4] = Player.HUMAN;
                        game.gameBoard[1][0] = Player.BOT;
                        game.gameBoard[1][1] = Player.BOT;
                        game.gameBoard[1][4] = Player.BOT;
                        game.gameBoard[1][6] = Player.BOT;
                        game.gameBoard[1][5] = Player.HUMAN;
                        game.gameBoard[1][3] = Player.HUMAN;
                        game.gameBoard[1][2] = Player.HUMAN;
                        game.gameBoard[2][0] = Player.BOT;
                        game.gameBoard[2][1] = Player.BOT;
                        game.gameBoard[2][5] = Player.BOT;
                        game.gameBoard[2][3] = Player.BOT;
                        game.gameBoard[2][4] = Player.HUMAN;
                        game.gameBoard[2][6] = Player.HUMAN;
                        game.gameBoard[3][1] = Player.HUMAN;
                        game.gameBoard[3][0] = Player.BOT;